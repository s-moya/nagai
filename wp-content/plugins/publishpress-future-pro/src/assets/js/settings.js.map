{"version":3,"file":"settings.js","mappings":"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","sources":["webpack://publishpress-future-pro/./lib/vendor/publishpress/publishpress-future/assets/jsx/components/ButtonsPanel.jsx","webpack://publishpress-future-pro/./lib/vendor/publishpress/publishpress-future/assets/jsx/components/CheckboxControl.jsx","webpack://publishpress-future-pro/./lib/vendor/publishpress/publishpress-future/assets/jsx/components/DateTimePicker.jsx","webpack://publishpress-future-pro/./lib/vendor/publishpress/publishpress-future/assets/jsx/components/FutureActionPanel.jsx","webpack://publishpress-future-pro/./lib/vendor/publishpress/publishpress-future/assets/jsx/components/FutureActionPanelBlockEditor.jsx","webpack://publishpress-future-pro/./lib/vendor/publishpress/publishpress-future/assets/jsx/components/FutureActionPanelBulkEdit.jsx","webpack://publishpress-future-pro/./lib/vendor/publishpress/publishpress-future/assets/jsx/components/FutureActionPanelClassicEditor.jsx","webpack://publishpress-future-pro/./lib/vendor/publishpress/publishpress-future/assets/jsx/components/FutureActionPanelQuickEdit.jsx","webpack://publishpress-future-pro/./lib/vendor/publishpress/publishpress-future/assets/jsx/components/NonceControl.jsx","webpack://publishpress-future-pro/./lib/vendor/publishpress/publishpress-future/assets/jsx/components/PostTypeSettingsPanel.jsx","webpack://publishpress-future-pro/./lib/vendor/publishpress/publishpress-future/assets/jsx/components/PostTypesSettingsPanels.jsx","webpack://publishpress-future-pro/./lib/vendor/publishpress/publishpress-future/assets/jsx/components/SelectControl.jsx","webpack://publishpress-future-pro/./lib/vendor/publishpress/publishpress-future/assets/jsx/components/SettingRow.jsx","webpack://publishpress-future-pro/./lib/vendor/publishpress/publishpress-future/assets/jsx/components/SettingsFieldset.jsx","webpack://publishpress-future-pro/./lib/vendor/publishpress/publishpress-future/assets/jsx/components/SettingsForm.jsx","webpack://publishpress-future-pro/./lib/vendor/publishpress/publishpress-future/assets/jsx/components/SettingsSection.jsx","webpack://publishpress-future-pro/./lib/vendor/publishpress/publishpress-future/assets/jsx/components/SettingsTable.jsx","webpack://publishpress-future-pro/./lib/vendor/publishpress/publishpress-future/assets/jsx/components/SubmitButton.jsx","webpack://publishpress-future-pro/./lib/vendor/publishpress/publishpress-future/assets/jsx/components/TextControl.jsx","webpack://publishpress-future-pro/./lib/vendor/publishpress/publishpress-future/assets/jsx/components/ToggleArrowButton.jsx","webpack://publishpress-future-pro/./lib/vendor/publishpress/publishpress-future/assets/jsx/components/ToggleCalendarDatePicker.jsx","webpack://publishpress-future-pro/./lib/vendor/publishpress/publishpress-future/assets/jsx/components/TokensControl.jsx","webpack://publishpress-future-pro/./lib/vendor/publishpress/publishpress-future/assets/jsx/components/TrueFalseControl.jsx","webpack://publishpress-future-pro/./lib/vendor/publishpress/publishpress-future/assets/jsx/components/index.jsx","webpack://publishpress-future-pro/./lib/vendor/publishpress/publishpress-future/assets/jsx/time.jsx","webpack://publishpress-future-pro/./lib/vendor/publishpress/publishpress-future/assets/jsx/utils.jsx","webpack://publishpress-future-pro/external var \"publishpressFutureProSettings\"","webpack://publishpress-future-pro/external var \"wp\"","webpack://publishpress-future-pro/external var \"wp.components\"","webpack://publishpress-future-pro/external var \"wp.data\"","webpack://publishpress-future-pro/external var \"wp.element\"","webpack://publishpress-future-pro/external var \"wp.hooks\"","webpack://publishpress-future-pro/external var \"wp.url\"","webpack://publishpress-future-pro/webpack/bootstrap","webpack://publishpress-future-pro/./src/assets/jsx/settings/settings.jsx"],"sourcesContent":["/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nexport const ButtonsPanel = function (props) {\n    return (\n        <div>\n            {props.children}\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment, useState  } from \"&wp.element\";\nimport { CheckboxControl as WPCheckboxControl } from \"&wp.components\";\n\nexport const CheckboxControl = function (props) {\n    const [checked, setChecked] = useState(props.checked || false);\n\n    let description;\n\n    if (props.unescapedDescription) {\n        // If using this option, the HTML has to be escaped before injected into the JS interface.\n        description = <p className=\"description\" dangerouslySetInnerHTML={{ __html: props.description }}></p>;\n    } else {\n        description = <p className=\"description\">{props.description}</p>;\n    }\n\n    const onChange = function (value) {\n        setChecked(value);\n\n        if (props.onChange) {\n            props.onChange(value);\n        }\n    };\n\n    return (\n        <Fragment>\n            <WPCheckboxControl\n                label={props.label}\n                name={props.name}\n                id={props.name}\n                className={props.className}\n                checked={checked || false}\n                onChange={onChange}\n            />\n\n            {description}\n        </Fragment>\n    )\n}\n","import { normalizeUnixTimeToMilliseconds } from \"../time\";\nimport { DateTimePicker as WPDateTimePicker } from \"&wp.components\";\n\n\nexport const DateTimePicker = ({currentDate, onChange, is12Hour, startOfWeek}) => {\n    if (typeof currentDate === 'number') {\n        currentDate = normalizeUnixTimeToMilliseconds(currentDate);\n    }\n\n    return (\n        <WPDateTimePicker\n            currentDate={currentDate}\n            onChange={onChange}\n            __nextRemoveHelpButton={true}\n            is12Hour={is12Hour}\n            startOfWeek={startOfWeek}\n        />\n    )\n}\n","import { compact } from '../utils';\nimport { ToggleCalendarDatePicker } from './ToggleCalendarDatePicker';\n\nconst { PanelRow, CheckboxControl, SelectControl, FormTokenField, Spinner, BaseControl } = wp.components;\nconst { Fragment, useEffect } = wp.element;\nconst { decodeEntities } = wp.htmlEntities;\nconst { addQueryArgs } = wp.url;\nconst {\n    useSelect,\n    useDispatch\n} = wp.data;\nconst { apiFetch } = wp;\n\nexport const FutureActionPanel = (props) => {\n    const action = useSelect((select) => select(props.storeName).getAction(), []);\n    const date = useSelect((select) => select(props.storeName).getDate(), []);\n    const enabled = useSelect((select) => select(props.storeName).getEnabled(), []);\n    const terms = useSelect((select) => select(props.storeName).getTerms(), []);\n    const taxonomy = useSelect((select) => select(props.storeName).getTaxonomy(), []);\n    const taxonomyName = useSelect((select) => select(props.storeName).getTaxonomyName(), []);\n    const termsListByName = useSelect((select) => select(props.storeName).getTermsListByName(), []);\n    const termsListById = useSelect((select) => select(props.storeName).getTermsListById(), []);\n    const isFetchingTerms = useSelect((select) => select(props.storeName).getIsFetchingTerms(), []);\n    const calendarIsVisible = useSelect((select) => select(props.storeName).getCalendarIsVisible(), []);\n\n    const {\n        setAction,\n        setDate,\n        setEnabled,\n        setTerms,\n        setTaxonomy,\n        setTermsListByName,\n        setTermsListById,\n        setTaxonomyName,\n        setIsFetchingTerms,\n        setCalendarIsVisible\n    } = useDispatch(props.storeName);\n\n    const mapTermsListById = (terms) => {\n        if (typeof terms !== 'object' || terms === null) {\n            return {};\n        }\n\n        return terms.map((term) => {\n            return termsListById[term];\n        });\n    }\n\n    const insertTerm = (term) => {\n        termsListByName[term] = {id: term, count: 0, description: \"\", link: \"\", name: term, slug: term, taxonomy: taxonomy};\n        termsListById[term] = term;\n        setTermsListByName(termsListByName);\n        setTermsListById(termsListById);\n        setTerms([...terms, term]);\n\n    }\n\n    const mapTermsListByName = (terms) => {\n        if (typeof terms !== 'object' || terms === null) {\n            return {};\n        }\n\n        return terms.map((term) => {\n            if (termsListByName[term]) {\n                return termsListByName[term].id;\n            }\n\n            insertTerm(term);\n\n            return term;\n        });\n    }\n\n    const callOnChangeData = (attribute, value) => {\n        if (typeof props.onChangeData === 'function') {\n            props.onChangeData(attribute, value);\n        }\n    }\n\n    const handleEnabledChange = (isChecked) => {\n        setEnabled(isChecked);\n\n        if (isChecked) {\n            setAction(props.action);\n            setDate(props.date);\n            setTerms(props.terms);\n            setTaxonomy(props.taxonomy);\n\n            fetchTerms();\n        }\n\n        callOnChangeData('enabled', isChecked);\n    }\n\n    const handleActionChange = (value) => {\n        setAction(value);\n\n        callOnChangeData('action', value);\n    }\n\n    const handleDateChange = (value) => {\n        setDate(value);\n\n        callOnChangeData('date', value);\n    }\n\n    const handleTermsChange = (value) => {\n        value = mapTermsListByName(value);\n\n        setTerms(value);\n\n        callOnChangeData('terms', value);\n    }\n\n    const fetchTerms = () => {\n        let termsListByName = {};\n        let termsListById = {};\n\n        setIsFetchingTerms(true);\n\n        apiFetch({\n            path: addQueryArgs(`publishpress-future/v1/terms/${taxonomy}`),\n        }).then((result) => {\n            result.terms.forEach(term => {\n                termsListByName[decodeEntities(term.name)] = term;\n                termsListById[term.id] = decodeEntities(term.name);\n            });\n\n            setTermsListByName(termsListByName);\n            setTermsListById(termsListById);\n            setTaxonomyName(decodeEntities(result.taxonomyName));\n            setIsFetchingTerms(false);\n        });\n    }\n\n    const storeCalendarIsVisibleOnStorage = (value) => {\n        localStorage.setItem('FUTURE_ACTION_CALENDAR_IS_VISIBLE_' + props.context, value ? '1' : '0');\n    }\n\n    const getCalendarIsVisibleFromStorage = () => {\n        return localStorage.getItem('FUTURE_ACTION_CALENDAR_IS_VISIBLE_' + props.context);\n    }\n\n    useEffect(() => {\n        if (props.autoEnableAndHideCheckbox)  {\n            setEnabled(true);\n        } else {\n            setEnabled(props.enabled);\n        }\n\n        setAction(props.action);\n        setDate(props.date);\n        setTerms(props.terms);\n        setTaxonomy(props.taxonomy);\n\n        if (getCalendarIsVisibleFromStorage() === null) {\n            setCalendarIsVisible(props.calendarIsVisible);\n        } else {\n            setCalendarIsVisible(getCalendarIsVisibleFromStorage() === '1');\n        }\n\n        // We need to get the value directly from the props because the value from the store is not updated yet\n        if (props.enabled) {\n            if (props.isCleanNewPost) {\n                // Force populate the default values\n                handleEnabledChange(true);\n            }\n\n            fetchTerms();\n        }\n    }, []);\n\n    useEffect(() => {\n        storeCalendarIsVisibleOnStorage(calendarIsVisible);\n    }, [calendarIsVisible]);\n\n    let selectedTerms = [];\n    if (terms && terms.length > 0 && termsListById) {\n        selectedTerms = compact(mapTermsListById(terms));\n\n        if (typeof selectedTerms === 'string') {\n            selectedTerms = [];\n        }\n    }\n\n    let termsListByNameKeys = [];\n    if (typeof termsListByName === 'object' && termsListByName !== null) {\n        termsListByNameKeys = Object.keys(termsListByName);\n    }\n\n    const panelClass = calendarIsVisible ? 'future-action-panel' : 'future-action-panel hidden-calendar';\n    const contentPanelClass = calendarIsVisible ? 'future-action-panel-content' : 'future-action-panel-content hidden-calendar';\n    const datePanelClass = calendarIsVisible ? 'future-action-date-panel' : 'future-action-date-panel hidden-calendar';\n\n    let is24hour;\n    if (props.timeFormat === 'inherited') {\n        is24hour = ! props.is12Hour;\n    } else {\n        is24hour = props.timeFormat === '24h';\n    }\n\n\n    const replaceCurlyBracketsWithLink = (string, href, target) => {\n        const parts = string.split('{');\n        const result = [];\n\n        result.push(parts.shift());\n\n        for (const part of parts) {\n            const [before, after] = part.split('}');\n\n            result.push(\n                <a href={href} target={target} key={href}>{before}</a>\n            );\n\n            result.push(after);\n        }\n\n        return result;\n    };\n\n    // Remove items from actions list if related to taxonomies and there is no taxonmoy for the post type\n    let actionsSelectOptions = props.actionsSelectOptions;\n    if (! props.taxonomy) {\n        actionsSelectOptions = props.actionsSelectOptions.filter((item) => {\n            return ['category', 'category-add', 'category-remove', 'category-remove-all'].indexOf(item.value) === -1;\n        });\n    }\n\n    const HelpText = replaceCurlyBracketsWithLink(props.strings.timezoneSettingsHelp, '/wp-admin/options-general.php#timezone_string', '_blank');\n    const displayTaxonomyField = String(action).includes('category') && action !== 'category-remove-all';\n\n    return (\n        <div className={panelClass}>\n            {props.autoEnableAndHideCheckbox && (\n                <input type=\"hidden\" name={'future_action_enabled'} value={1} />\n            )}\n\n            {! props.autoEnableAndHideCheckbox && (\n                <PanelRow>\n                    <CheckboxControl\n                        label={props.strings.enablePostExpiration}\n                        checked={enabled || false}\n                        onChange={handleEnabledChange}\n                    />\n                </PanelRow>\n            )}\n\n            {enabled && (\n                <Fragment>\n                    <PanelRow className={contentPanelClass + ' future-action-full-width'}>\n                        <SelectControl\n                            label={props.strings.action}\n                            value={action}\n                            options={actionsSelectOptions}\n                            onChange={handleActionChange}\n                        />\n                    </PanelRow>\n\n                    {\n                        displayTaxonomyField && (\n                            isFetchingTerms && (\n                                <PanelRow>\n                                    <BaseControl label={taxonomyName}>\n                                        {`${props.strings.loading} (${taxonomyName})`}\n                                        <Spinner />\n                                    </BaseControl>\n                                </PanelRow>\n                            )\n                            || (!taxonomy && (\n                                <PanelRow>\n                                    <BaseControl label={taxonomyName} className=\"future-action-warning\">\n                                        <div>\n                                            <i className=\"dashicons dashicons-warning\"></i> {props.strings.noTaxonomyFound}\n                                        </div>\n                                    </BaseControl>\n                                </PanelRow>\n                            )\n                                || (\n                                    termsListByNameKeys.length === 0 && (\n                                        <PanelRow>\n                                            <BaseControl label={taxonomyName} className=\"future-action-warning\">\n                                                <div>\n                                                    <i className=\"dashicons dashicons-warning\"></i> {props.strings.noTermsFound}\n                                                </div>\n                                            </BaseControl>\n                                        </PanelRow>\n                                    )\n                                    || (\n                                        <PanelRow className=\"future-action-full-width\">\n                                            <BaseControl>\n                                                <FormTokenField\n                                                    label={taxonomyName}\n                                                    value={selectedTerms}\n                                                    suggestions={termsListByNameKeys}\n                                                    onChange={handleTermsChange}\n                                                    maxSuggestions={1000}\n                                                    __experimentalExpandOnFocus={true}\n                                                    __experimentalAutoSelectFirstMatch={true}\n                                                />\n                                            </BaseControl>\n                                        </PanelRow>\n                                    )\n                                )\n                            )\n                        )\n                    }\n\n                    <PanelRow className={datePanelClass}>\n                        <ToggleCalendarDatePicker\n                            currentDate={date}\n                            onChangeDate={handleDateChange}\n                            onToggleCalendar={() => setCalendarIsVisible(!calendarIsVisible)}\n                            is12Hour={!is24hour}\n                            startOfWeek={props.startOfWeek}\n                            isExpanded={calendarIsVisible}\n                            strings={props.strings}\n                        />\n                    </PanelRow>\n\n                    <PanelRow>\n                        <div className=\"future-action-help-text\">\n                            <hr />\n\n                            <span className=\"dashicons dashicons-info\"></span> {HelpText}\n                        </div>\n                    </PanelRow>\n                </Fragment>\n            )}\n        </div>\n    );\n};\n","import { FutureActionPanel } from './';\n\nexport const FutureActionPanelBlockEditor = (props) => {\n    const { PluginDocumentSettingPanel } = wp.editPost;\n    const { useDispatch, select } = wp.data;\n\n    const { editPost } = useDispatch('core/editor');\n\n    const editPostAttribute = (newAttribute) => {\n        const attribute = {\n            publishpress_future_action: {}\n        };\n\n        // For each property on newAttribute, set the value on attribute\n        for (const [name, value] of Object.entries(newAttribute)) {\n            attribute.publishpress_future_action[name] = value;\n        }\n\n        editPost(attribute);\n    }\n\n    const onChangeData = (attribute, value) => {\n        const store = select(props.storeName);\n\n        const newAttribute = {\n            'enabled': store.getEnabled()\n        }\n\n        if (newAttribute.enabled) {\n            newAttribute['action'] = store.getAction();\n            newAttribute['date'] = store.getDate();\n            newAttribute['terms'] = store.getTerms();\n            newAttribute['taxonomy'] = store.getTaxonomy();\n        }\n\n        editPostAttribute(newAttribute);\n    }\n\n    const data = select('core/editor').getEditedPostAttribute('publishpress_future_action');\n\n    return (\n        <PluginDocumentSettingPanel\n            name={'publishpress-future-action-panel'}\n            title={props.strings.panelTitle}\n            icon=\"calendar\"\n            initialOpen={props.postTypeDefaultConfig.autoEnable}\n            className={'post-expirator-panel'}>\n            <div id='publishpress-future-block-editor'>\n                <FutureActionPanel\n                    context={'block-editor'}\n                    postType={props.postType}\n                    isCleanNewPost={props.isCleanNewPost}\n                    actionsSelectOptions={props.actionsSelectOptions}\n                    enabled={data.enabled}\n                    calendarIsVisible={true}\n                    action={data.action}\n                    date={data.date}\n                    terms={data.terms}\n                    taxonomy={data.taxonomy}\n                    taxonomyName={props.taxonomyName}\n                    onChangeData={onChangeData}\n                    is12Hour={props.is12Hour}\n                    timeFormat={props.timeFormat}\n                    startOfWeek={props.startOfWeek}\n                    storeName={props.storeName}\n                    strings={props.strings} />\n            </div>\n        </PluginDocumentSettingPanel>\n    );\n};\n","import { FutureActionPanel, SelectControl } from '.';\nimport { getElementByName } from '../utils';\n\nexport const FutureActionPanelBulkEdit = (props) => {\n    const { useSelect, useDispatch, select } = wp.data;\n\n    const onChangeData = (attribute, value) => {\n        getElementByName('future_action_bulk_enabled').value = select(props.storeName).getEnabled() ? 1 : 0;\n        getElementByName('future_action_bulk_action').value = select(props.storeName).getAction();\n        getElementByName('future_action_bulk_date').value = select(props.storeName).getDate();\n        getElementByName('future_action_bulk_terms').value = select(props.storeName).getTerms().join(',');\n        getElementByName('future_action_bulk_taxonomy').value = select(props.storeName).getTaxonomy();\n    }\n\n    const date = useSelect((select) => select(props.storeName).getDate(), []);\n    const enabled = useSelect((select) => select(props.storeName).getEnabled(), []);\n    const action = useSelect((select) => select(props.storeName).getAction(), []);\n    const terms = useSelect((select) => select(props.storeName).getTerms(), []);\n    const taxonomy = useSelect((select) => select(props.storeName).getTaxonomy(), []);\n    const changeAction = useSelect((select) => select(props.storeName).getChangeAction(), []);\n\n    const {\n        setChangeAction\n    } = useDispatch(props.storeName);\n\n    let termsString = terms;\n    if (typeof terms === 'object') {\n        termsString = terms.join(',');\n    }\n\n    const handleStrategyChange = (value) => {\n        setChangeAction(value);\n    };\n\n    const options = [\n        { value: 'no-change', label: props.strings.noChange },\n        { value: 'change-add', label: props.strings.changeAdd },\n        { value: 'add-only', label: props.strings.addOnly },\n        { value: 'change-only', label: props.strings.changeOnly },\n        { value: 'remove-only', label: props.strings.removeOnly },\n    ];\n\n    const optionsToDisplayPanel = ['change-add', 'add-only', 'change-only'];\n\n    return (\n        <div className={'post-expirator-panel'}>\n            <SelectControl\n                label={props.strings.futureActionUpdate}\n                name={'future_action_bulk_change_action'}\n                value={changeAction}\n                options={options}\n                onChange={handleStrategyChange}\n            />\n\n            {optionsToDisplayPanel.includes(changeAction) && (\n                <FutureActionPanel\n                    context={'bulk-edit'}\n                    autoEnableAndHideCheckbox={true}\n                    postType={props.postType}\n                    isCleanNewPost={props.isNewPost}\n                    actionsSelectOptions={props.actionsSelectOptions}\n                    enabled={true}\n                    calendarIsVisible={false}\n                    action={action}\n                    date={date}\n                    terms={terms}\n                    taxonomy={taxonomy}\n                    taxonomyName={props.taxonomyName}\n                    onChangeData={onChangeData}\n                    is12Hour={props.is12Hour}\n                    timeFormat={props.timeFormat}\n                    startOfWeek={props.startOfWeek}\n                    storeName={props.storeName}\n                    strings={props.strings} />\n            )}\n\n            {/* Bulk edit JS code will save only fields with name inside the edit row */}\n            <input type=\"hidden\" name={'future_action_bulk_enabled'} value={enabled ? 1 : 0} />\n            <input type=\"hidden\" name={'future_action_bulk_action'} value={action} />\n            <input type=\"hidden\" name={'future_action_bulk_date'} value={date} />\n            <input type=\"hidden\" name={'future_action_bulk_terms'} value={termsString} />\n            <input type=\"hidden\" name={'future_action_bulk_taxonomy'} value={taxonomy} />\n            <input type=\"hidden\" name={'future_action_bulk_view'} value=\"bulk-edit\" />\n            <input type=\"hidden\" name={'_future_action_nonce'} value={props.nonce} />\n        </div>\n    );\n};\n","import { FutureActionPanel } from \"./\";\nimport { select } from \"&wp.data\";\n\nexport const FutureActionPanelClassicEditor = (props) => {\n    const browserTimezoneOffset = new Date().getTimezoneOffset();\n\n    const getElementByName = (name) => {\n        return document.getElementsByName(name)[0];\n    }\n\n    const onChangeData = (attribute, value) => {\n        const store = select(props.storeName);\n\n        getElementByName('future_action_enabled').value = store.getEnabled() ? 1 : 0;\n        getElementByName('future_action_action').value = store.getAction();\n        getElementByName('future_action_date').value = store.getDate();\n        getElementByName('future_action_terms').value = store.getTerms().join(',');\n        getElementByName('future_action_taxonomy').value = store.getTaxonomy();\n    }\n\n    const getTermsFromElementByName = (name) => {\n        const element = getElementByName(name);\n        if (!element) {\n            return [];\n        }\n\n        let terms = element.value.split(',');\n\n        if (terms.length === 1 && terms[0] === '') {\n            terms = [];\n        }\n\n        return terms.map(term => parseInt(term));\n    }\n\n    const getElementValueByName = (name) => {\n        const element = getElementByName(name);\n        if (!element) {\n            return '';\n        }\n\n        return element.value;\n    }\n\n    const data = {\n        enabled: getElementValueByName('future_action_enabled') === '1',\n        action: getElementValueByName('future_action_action'),\n        date: getElementValueByName('future_action_date'),\n        terms: getTermsFromElementByName('future_action_terms'),\n        taxonomy: getElementValueByName('future_action_taxonomy'),\n    };\n\n    return (\n        <div className={'post-expirator-panel'}>\n            <FutureActionPanel\n                context={'classic-editor'}\n                postType={props.postType}\n                isCleanNewPost={props.isNewPost}\n                actionsSelectOptions={props.actionsSelectOptions}\n                enabled={data.enabled}\n                calendarIsVisible={true}\n                action={data.action}\n                date={data.date}\n                terms={data.terms}\n                taxonomy={data.taxonomy}\n                taxonomyName={props.taxonomyName}\n                onChangeData={onChangeData}\n                is12Hour={props.is12Hour}\n                timeFormat={props.timeFormat}\n                startOfWeek={props.startOfWeek}\n                storeName={props.storeName}\n                strings={props.strings} />\n        </div>\n    );\n};\n","import { FutureActionPanel } from './';\nimport { useSelect } from '&wp.data';\n\nexport const FutureActionPanelQuickEdit = (props) => {\n    const onChangeData = (attribute, value) => {};\n\n    const date = useSelect((select) => select(props.storeName).getDate(), []);\n    const enabled = useSelect((select) => select(props.storeName).getEnabled(), []);\n    const action = useSelect((select) => select(props.storeName).getAction(), []);\n    const terms = useSelect((select) => select(props.storeName).getTerms(), []);\n    const taxonomy = useSelect((select) => select(props.storeName).getTaxonomy(), []);\n\n    let termsString = terms;\n    if (typeof terms === 'object') {\n        termsString = terms.join(',');\n    }\n\n    return (\n        <div className={'post-expirator-panel'}>\n            <FutureActionPanel\n                context={'quick-edit'}\n                postType={props.postType}\n                isCleanNewPost={props.isNewPost}\n                actionsSelectOptions={props.actionsSelectOptions}\n                enabled={enabled}\n                calendarIsVisible={false}\n                action={action}\n                date={date}\n                terms={terms}\n                taxonomy={taxonomy}\n                taxonomyName={props.taxonomyName}\n                onChangeData={onChangeData}\n                is12Hour={props.is12Hour}\n                timeFormat={props.timeFormat}\n                startOfWeek={props.startOfWeek}\n                storeName={props.storeName}\n                strings={props.strings} />\n\n            {/* Quick edit JS code will save only fields with name inside the edit row */}\n            <input type=\"hidden\" name={'future_action_enabled'} value={enabled ? 1 : 0} />\n            <input type=\"hidden\" name={'future_action_action'} value={action ? action : ''} />\n            <input type=\"hidden\" name={'future_action_date'} value={date ? date : ''} />\n            <input type=\"hidden\" name={'future_action_terms'} value={termsString ? termsString : ''} />\n            <input type=\"hidden\" name={'future_action_taxonomy'} value={taxonomy ? taxonomy : ''} />\n            <input type=\"hidden\" name={'future_action_view'} value=\"quick-edit\" />\n            <input type=\"hidden\" name={'_future_action_nonce'} value={props.nonce} />\n        </div>\n    );\n};\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment } from \"&wp.element\";\n\nexport const NonceControl = function (props) {\n    if (! props.name) {\n        props.name = '_wpnonce';\n    }\n\n    if (! props.referrer) {\n        props.referrer = true;\n    }\n\n    return (\n        <Fragment>\n            <input type=\"hidden\" name={props.name} id={props.name} value={props.nonce} />\n\n            {props.referrer &&\n                <input type=\"hidden\" name=\"_wp_http_referer\" value={props.referrer}/>\n            }\n        </Fragment>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nimport {\n    SettingRow,\n    SettingsFieldset,\n    SettingsTable,\n    SelectControl,\n    TextControl,\n    TokensControl,\n    CheckboxControl\n} from './';\nimport { useEffect, useState } from '&wp.element';\nimport { addQueryArgs } from '&wp.url';\nimport { applyFilters } from '&wp.hooks';\nimport { apiFetch } from '&wp';\n\nexport const PostTypeSettingsPanel = function (props) {\n    const [postTypeTaxonomy, setPostTypeTaxonomy] = useState(props.settings.taxonomy);\n    const [termOptions, setTermOptions] = useState([]);\n    const [termsSelectIsLoading, setTermsSelectIsLoading] = useState(false);\n    const [selectedTerms, setSelectedTerms] = useState([]);\n    const [settingHowToExpire, setSettingHowToExpire] = useState(props.settings.howToExpire);\n    const [isActive, setIsActive] = useState(props.settings.active);\n    const [expireOffset, setExpireOffset] = useState(props.settings.defaultExpireOffset);\n    const [emailNotification, setEmailNotification] = useState(props.settings.emailNotification);\n    const [isAutoEnabled, setIsAutoEnabled] = useState(props.settings.autoEnabled);\n\n    const onChangeTaxonomy = function (value) {\n        setPostTypeTaxonomy(value);\n    };\n\n    const onChangeTerms = (value) => {\n        setSelectedTerms(value);\n    };\n\n    const onChangeHowToExpire = (value) => {\n        setSettingHowToExpire(value);\n    }\n\n    const onChangeActive = (value) => {\n        setIsActive(value);\n    }\n\n    const onChangeExpireOffset = (value) => {\n        setExpireOffset(value);\n    }\n\n    const onChangeEmailNotification = (value) => {\n        setEmailNotification(value);\n    }\n\n    const onChangeAutoEnabled = (value) => {\n        setIsAutoEnabled(value);\n    }\n\n    useEffect(() => {\n        if (!postTypeTaxonomy || !props.taxonomiesList) {\n            return;\n        }\n\n        setTermsSelectIsLoading(true);\n        apiFetch({\n            path: addQueryArgs(`publishpress-future/v1/terms/${postTypeTaxonomy}`),\n        }).then((result) => {\n            let options = [];\n\n            let settingsTermsOptions = null;\n            let option;\n\n            result.terms.forEach(term => {\n                option = { value: term.id, label: term.name };\n                options.push(option);\n\n                if (postTypeTaxonomy === props.settings.taxonomy && props.settings.terms.includes(term.id)) {\n                    if (settingsTermsOptions === null) {\n                        settingsTermsOptions = [];\n                    }\n\n                    settingsTermsOptions.push(option.label);\n                }\n            });\n\n            setTermOptions(options);\n            setSelectedTerms(settingsTermsOptions);\n            setTermsSelectIsLoading(false);\n        });\n    }, [postTypeTaxonomy]);\n\n    const termOptionsLabels = termOptions.map((term) => term.label);\n\n    let settingsRows = [\n        <SettingRow label={props.text.fieldActive} key={'expirationdate_activemeta-' + props.postType}>\n            <CheckboxControl\n                name={'expirationdate_activemeta-' + props.postType}\n                checked={isActive || false}\n                label={props.text.fieldActiveLabel}\n                onChange={onChangeActive}\n            />\n        </SettingRow>\n    ];\n\n    if (isActive) {\n        settingsRows.push(\n            <SettingRow label={props.text.fieldAutoEnable} key={'expirationdate_autoenable-' + props.postType}>\n                <CheckboxControl\n                    name={'expirationdate_autoenable-' + props.postType}\n                    checked={isAutoEnabled || false}\n                    label={props.text.fieldAutoEnableLabel}\n                    onChange={onChangeAutoEnabled}\n                />\n            </SettingRow>\n        );\n\n        settingsRows.push(\n            <SettingRow label={props.text.fieldTaxonomy} key={'expirationdate_taxonomy-' + props.postType}>\n                <SelectControl\n                    name={'expirationdate_taxonomy-' + props.postType}\n                    options={props.taxonomiesList}\n                    selected={postTypeTaxonomy}\n                    noItemFoundMessage={props.text.noItemsfound}\n                    description={props.text.fieldTaxonomyDescription}\n                    data={props.postType}\n                    onChange={onChangeTaxonomy}\n                >\n                </SelectControl>\n            </SettingRow>\n        );\n\n        // Remove items from expireTypeList if related to taxonomies and there is no taxonmoy for the post type\n        if (props.taxonomiesList.length === 0) {\n            props.expireTypeList[props.postType] = props.expireTypeList[props.postType].filter((item) => {\n                return ['category', 'category-add', 'category-remove'].indexOf(item.value) === -1;\n            });\n        }\n\n        settingsRows.push(\n            <SettingRow label={props.text.fieldHowToExpire} key={'expirationdate_expiretype-' + props.postType}>\n                <SelectControl\n                    name={'expirationdate_expiretype-' + props.postType}\n                    className={'pe-howtoexpire'}\n                    options={props.expireTypeList[props.postType]}\n                    description={props.text.fieldHowToExpireDescription}\n                    selected={settingHowToExpire}\n                    onChange={onChangeHowToExpire}\n                />\n\n                {(props.taxonomiesList.length > 0 && (['category', 'category-add', 'category-remove'].indexOf(settingHowToExpire) > -1)) &&\n                    <TokensControl\n                        label={props.text.fieldTerm}\n                        name={'expirationdate_terms-' + props.postType}\n                        options={termOptionsLabels}\n                        value={selectedTerms}\n                        isLoading={termsSelectIsLoading}\n                        onChange={onChangeTerms}\n                        description={props.text.fieldTermDescription}\n                        maxSuggestions={1000}\n                        expandOnFocus={true}\n                        autoSelectFirstMatch={true}\n                    />\n                }\n            </SettingRow>\n        );\n\n        settingsRows.push(\n            <SettingRow label={props.text.fieldDefaultDateTimeOffset} key={'expired-custom-date-' + props.postType}>\n                <TextControl\n                    name={'expired-custom-date-' + props.postType}\n                    value={expireOffset}\n                    placeholder={props.settings.globalDefaultExpireOffset}\n                    description={props.text.fieldDefaultDateTimeOffsetDescription}\n                    unescapedDescription={true}\n                    onChange={onChangeExpireOffset}\n                />\n            </SettingRow>\n        );\n\n        settingsRows.push(\n            <SettingRow label={props.text.fieldWhoToNotify} key={'expirationdate_emailnotification-' + props.postType}>\n                <TextControl\n                    name={'expirationdate_emailnotification-' + props.postType}\n                    className=\"large-text\"\n                    value={emailNotification}\n                    description={props.text.fieldWhoToNotifyDescription}\n                    onChange={onChangeEmailNotification}\n                />\n            </SettingRow>\n        );\n    }\n\n    settingsRows = applyFilters('expirationdate_settings_posttype', settingsRows, props, isActive, useState);\n\n    return (\n        <SettingsFieldset legend={props.legend}>\n            <SettingsTable bodyChildren={settingsRows} />\n        </SettingsFieldset>\n    );\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nimport { PostTypeSettingsPanel } from \"./\";\n\nexport const PostTypesSettingsPanels = function (props) {\n    let panels = [];\n\n    for (const [postType, postTypeSettings] of Object.entries(props.settings)) {\n        panels.push(\n            <PostTypeSettingsPanel\n                legend={postTypeSettings.label}\n                text={props.text}\n                postType={postType}\n                settings={postTypeSettings}\n                expireTypeList={props.expireTypeList}\n                taxonomiesList={props.taxonomiesList[postType]}\n                key={`${postType}-panel`}\n            />\n        );\n    }\n\n    return (panels);\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment } from \"&wp.element\";\nimport { SelectControl as WPSelectControl } from \"&wp.components\";\n\nexport const SelectControl = function (props) {\n    const onChange = (value) => {\n        props.onChange(value);\n    };\n\n    return (\n        <Fragment>\n            {props.options.length === 0 && (\n                <div>{props.noItemFoundMessage}</div>\n            )}\n\n            {props.options.length > 0 && (\n                <WPSelectControl\n                    label={props.label}\n                    name={props.name}\n                    id={props.name}\n                    className={props.className}\n                    value={props.selected}\n                    onChange={onChange}\n                    data-data={props.data}\n                    options={props.options}\n                />\n            )}\n\n            {props.children}\n\n            <p className=\"description\">{props.description}</p>\n        </Fragment>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment } from \"&wp.element\";\n\nexport const SettingRow = function (props) {\n    return (\n        <tr valign=\"top\">\n            <th scope=\"row\">\n                <label htmlFor=\"\">{props.label}</label>\n            </th>\n            <td>\n                {props.children}\n            </td>\n        </tr>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nexport const SettingsFieldset = function (props) {\n    return (\n        <fieldset>\n                <legend>{props.legend}</legend>\n                {props.children}\n        </fieldset>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nexport const SettingsForm = function (props) {\n    return (\n        <form method=\"post\">\n            {props.children}\n        </form>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment } from \"&wp.element\";\n\nexport const SettingsSection = function (props) {\n    return (\n        <Fragment>\n            <h2>{props.title}</h2>\n            <p>{props.description}</p>\n            {props.children}\n        </Fragment>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nexport const SettingsTable = function (props) {\n    return (\n        <table className=\"form-table\">\n            <tbody>\n                {props.bodyChildren}\n            </tbody>\n        </table>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nexport const SubmitButton = function (props) {\n    return (\n        <input\n            type=\"submit\"\n            name={props.name}\n            value={props.text}\n            className=\"button-primary\"\n        />\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment } from \"&wp.element\";\nimport { TextControl as WPTextControl } from \"&wp.components\";\n\nexport const TextControl = function (props) {\n    let description;\n\n    if (props.unescapedDescription) {\n        // If using this option, the HTML has to be escaped before injected into the JS interface.\n        description = <p className=\"description\" dangerouslySetInnerHTML={{ __html: props.description }}></p>;\n    } else {\n        description = <p className=\"description\">{props.description}</p>;\n    }\n\n    const onChange = function (value) {\n        if (props.onChange) {\n            props.onChange(value);\n        }\n    };\n\n    return (\n        <Fragment>\n            <WPTextControl\n                type=\"text\"\n                label={props.label}\n                name={props.name}\n                id={props.name}\n                className={props.className}\n                value={props.value}\n                placeholder={props.placeholder}\n                onChange={onChange}\n            />\n\n            {description}\n        </Fragment>\n    )\n}\n","import { Button } from '&wp.components';\n\nexport const ToggleArrowButton = function (props) {\n    const onClick = function () {\n        if (props.onClick) {\n            props.onClick();\n        }\n    };\n\n    const iconExpanded = props.iconExpanded ? props.iconExpanded : 'arrow-up-alt2';\n    const iconCollapsed = props.iconCollapsed ? props.iconCollapsed : 'arrow-down-alt2';\n\n    const icon = props.isExpanded ? iconExpanded : iconCollapsed;\n\n    const title = props.isExpanded ? props.titleExpanded : props.titleCollapsed;\n\n    return (\n        <Button\n            isSmall\n            title={title}\n            icon={icon}\n            onClick={onClick}\n            className={props.className}\n        />\n    )\n}\n","import { ToggleArrowButton } from \"./ToggleArrowButton\";\nimport { DateTimePicker } from \"./DateTimePicker\";\nimport { Fragment, useEffect } from \"&wp.element\";\n\nexport const ToggleCalendarDatePicker = (\n    {\n        isExpanded,\n        strings,\n        onToggleCalendar,\n        currentDate,\n        onChangeDate,\n        is12Hour,\n        startOfWeek\n    }\n) => {\n    useEffect(() => {\n        // Move the element of the toggle button to between the time and date elements.\n        const toggleButtonElement = document.querySelector('.future-action-calendar-toggle');\n\n        if (! toggleButtonElement) {\n            return;\n        }\n\n        const dateTimeElement = toggleButtonElement.nextElementSibling;\n\n        if (! dateTimeElement) {\n            return;\n        }\n\n        const timeElement = dateTimeElement.querySelector('.components-datetime__time');\n\n        if (! timeElement) {\n            return;\n        }\n\n        const dateElement = timeElement.nextSibling;\n\n        if (! dateElement) {\n            return;\n        }\n\n        dateTimeElement.insertBefore(toggleButtonElement, dateElement)\n    });\n\n    return (\n        <Fragment>\n            <ToggleArrowButton\n                className=\"future-action-calendar-toggle\"\n                isExpanded={isExpanded}\n                iconExpanded=\"arrow-up-alt2\"\n                iconCollapsed=\"calendar\"\n                titleExpanded={strings.hideCalendar}\n                titleCollapsed={strings.showCalendar}\n                onClick={onToggleCalendar} />\n\n            <DateTimePicker\n                currentDate={currentDate}\n                onChange={onChangeDate}\n                __nextRemoveHelpButton={true}\n                is12Hour={is12Hour}\n                startOfWeek={startOfWeek}\n            />\n        </Fragment>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { Fragment, useState, useEffect } from \"&wp.element\";\nimport { FormTokenField } from \"&wp.components\";\n\nexport const TokensControl = (props) => {\n    const [stringValue, setStringValue] = useState('');\n\n    useEffect(() => {\n        if (props.value) {\n            setStringValue(props.value.join(','));\n        }\n    }, [props.value]);\n\n    let description;\n\n    if (props.description) {\n        if (props.unescapedDescription) {\n            // If using this option, the HTML has to be escaped before injected into the JS interface.\n            description = <p className=\"description\" dangerouslySetInnerHTML={{__html: props.description}}></p>;\n        } else {\n            description = <p className=\"description\">{props.description}</p>;\n        }\n    }\n\n    const onChange = (value) => {\n        if (props.onChange) {\n            props.onChange(value);\n        }\n\n        if (typeof value === 'object') {\n            setStringValue(value.join(','));\n        } else {\n            setStringValue('');\n        }\n    }\n\n    const value = props.value ? props.value : [];\n \n    return (\n        <Fragment>\n            <FormTokenField\n                label={props.label}\n                value={value}\n                suggestions={props.options}\n                onChange={onChange}\n                maxSuggestions={props.maxSuggestions}\n                className=\"publishpres-future-token-field\"\n                __experimentalExpandOnFocus={props.expandOnFocus}\n                __experimentalAutoSelectFirstMatch={props.autoSelectFirstMatch}\n            />\n            <input type=\"hidden\" name={props.name} value={stringValue} />\n\n            {description}\n        </Fragment>\n    )\n}\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\n\nexport const TrueFalseControl = function (props) {\n    const { Fragment } = wp.element;\n\n    const onChange = (e) => {\n        if (props.onChange) {\n            props.onChange(\n                e.target.value === props.trueValue && jQuery(e.target).is(':checked')\n            );\n            // Check only the true radio... using the field name? or directly the ID\n        }\n    };\n\n    return (\n        <Fragment>\n            <input\n                type=\"radio\"\n                name={props.name}\n                id={props.name + '-true'}\n                value={props.trueValue}\n                defaultChecked={props.selected}\n                onChange={onChange}\n            />\n\n            <label htmlFor={props.name + '-true'}>{props.trueLabel}</label>\n            &nbsp;&nbsp;\n            <input\n                type=\"radio\"\n                name={props.name}\n                defaultChecked={!props.selected}\n                id={props.name + '-false'}\n                value={props.falseValue}\n                onChange={onChange}\n            />\n            <label\n                htmlFor={props.name + '-false'}>{props.falseLabel}</label>\n\n            <p className=\"description\">{props.description}</p>\n        </Fragment>\n    )\n}\n","export { ButtonsPanel } from \"./ButtonsPanel\";\nexport { FutureActionPanel } from \"./FutureActionPanel\";\nexport { FutureActionPanelBlockEditor } from \"./FutureActionPanelBlockEditor\";\nexport { FutureActionPanelClassicEditor } from \"./FutureActionPanelClassicEditor\";\nexport { FutureActionPanelQuickEdit } from \"./FutureActionPanelQuickEdit\";\nexport { FutureActionPanelBulkEdit } from \"./FutureActionPanelBulkEdit\";\nexport { PostTypeSettingsPanel } from \"./PostTypeSettingsPanel\";\nexport { PostTypesSettingsPanels } from \"./PostTypesSettingsPanels\";\nexport { SettingRow } from \"./SettingRow\";\nexport { SettingsFieldset } from \"./SettingsFieldset\";\nexport { SettingsForm } from \"./SettingsForm\";\nexport { SettingsSection } from \"./SettingsSection\";\nexport { SettingsTable } from \"./SettingsTable\";\nexport { SubmitButton } from \"./SubmitButton\";\nexport { CheckboxControl } from \"./CheckboxControl\";\nexport { SelectControl } from \"./SelectControl\";\nexport { TextControl } from \"./TextControl\";\nexport { TokensControl } from \"./TokensControl\";\nexport { NonceControl } from \"./NonceControl\";\nexport { TrueFalseControl } from \"./TrueFalseControl\";\n","export const getCurrentTimeInSeconds = () => {\n    return normalizeUnixTimeToSeconds(new Date().getTime());\n}\n\nexport const getCurrentTimeAsTimestamp = () => {\n    return formatUnixTimeToTimestamp(getCurrentTimeInSeconds());\n}\n\nexport const formatUnixTimeToTimestamp = (unixTimestamp) => {\n    const date = new Date(\n        normalizeUnixTimeToSeconds(unixTimestamp)\n    );\n\n    const year = date.getFullYear();\n    const month = (\"0\" + (date.getMonth() + 1)).slice(-2); // Months are zero-based\n    const day = (\"0\" + date.getDate()).slice(-2);\n    const hours = (\"0\" + date.getHours()).slice(-2);\n    const minutes = (\"0\" + date.getMinutes()).slice(-2);\n    const seconds = (\"0\" + date.getSeconds()).slice(-2);\n\n    return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n}\n\nexport const formatTimestampToUnixTime = (time) => {\n    const date = new Date(time);\n\n    return normalizeUnixTimeToSeconds(date.getTime());\n}\n\nexport const timeIsInSeconds = (time) => {\n    return parseInt(time).toString().length <= 10;\n}\n\nexport const normalizeUnixTimeToSeconds = (time) => {\n    time = parseInt(time);\n\n    return timeIsInSeconds() ? time : time / 1000;\n}\n\nexport const normalizeUnixTimeToMilliseconds = (time) => {\n    time = parseInt(time);\n\n    return timeIsInSeconds() ? time * 1000 : time;\n}\n","export const compact = (array) => {\n    if (!array) {\n        return [];\n    }\n\n    if (! Array.isArray(array) && typeof array === 'object') {\n        array = Object.values(array);\n    }\n\n    return array.filter((item) => {\n        return item !== null && item !== undefined && item !== '';\n    });\n}\n\nexport const debugLogFactory = (config) => {\n    return (description, ...message) => {\n        if (console && config.isDebugEnabled) {\n            console.debug('[Future]', description, ...message);\n        }\n    }\n}\n\nexport const isGutenbergEnabled = () => {\n    return document.body.classList.contains('block-editor-page');\n}\n\nexport const getElementByName = (name) => {\n    return document.getElementsByName(name)[0];\n}\n\nexport const getFieldByName = (name, postId) => {\n    return document.querySelector(`#the-list tr#post-${postId} .column-expirationdate input#future_action_${name}-${postId}`);\n}\n\nexport const getFieldValueByName = (name, postId) => {\n    const field = getFieldByName(name, postId);\n\n    if (!field) {\n        return null;\n    }\n\n    return field.value;\n};\n\nexport const getFieldValueByNameAsArrayOfInt = (name, postId) => {\n    const field = getFieldByName(name, postId);\n\n    if (!field || !field.value) {\n        return [];\n    }\n\n    if (typeof field.value === 'number') {\n        field.value = field.value.toString();\n    }\n\n    return field.value.split(',').map(term => parseInt(term));\n};\n\nexport const getFieldValueByNameAsBool = (name, postId) => {\n    const field = getFieldByName(name, postId);\n\n    if (!field) {\n        return false;\n    }\n\n    return field.value === '1' || field.value === 'true';\n}\n\nexport const getActionSettingsFromColumnData = (postId) => {\n    const columnData = document.querySelector(`#post-expire-column-${postId}`);\n\n    return {\n        enabled: columnData.dataset.actionEnabled === '1',\n        action: columnData.dataset.actionType,\n        date: columnData.dataset.actionDate,\n        dateUnix: columnData.dataset.actionDateUnix,\n        taxonomy: columnData.dataset.actionTaxonomy,\n        terms: columnData.dataset.actionTerms,\n    };\n}\n\n/**\n * This function is used to determine if a value is a number, including strings.\n *\n * @param {*} value\n * @returns\n */\nexport const isNumber = (value) => {\n    return !isNaN(value);\n}\n","module.exports = publishpressFutureProSettings;","module.exports = wp;","module.exports = wp.components;","module.exports = wp.data;","module.exports = wp.element;","module.exports = wp.hooks;","module.exports = wp.url;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/*\n * Copyright (c) 2023. PublishPress, All rights reserved.\n */\nimport { SettingRow } from \"&publishpress-free/components\";\nimport { addFilter } from \"&wp.hooks\";\nimport {\n    settings,\n    customPostStatuses,\n    text\n} from \"&config.pro-settings\";\nimport { CheckboxControl, Button } from \"&wp.components\";\n\nconst addSettings = (settingsRows, props, settingActive, useState) => {\n    let defaultEnabledCustomStatuses = [];\n    if (settings.enabledCustomStatuses) {\n        defaultEnabledCustomStatuses = settings.enabledCustomStatuses[props.postType] || [];\n    }\n\n    const [enabledCustomStatuses, setEnabledCustomStatuses] = useState(defaultEnabledCustomStatuses);\n\n    const handleCustomStatusesChange = (postStatus, checked) => {\n        let newEnabledCustomStatuses = [...enabledCustomStatuses];\n\n        if (checked) {\n            newEnabledCustomStatuses.push(postStatus);\n        } else {\n            newEnabledCustomStatuses = newEnabledCustomStatuses.filter((status) => status !== postStatus);\n        }\n\n        // Remove duplicates.\n        newEnabledCustomStatuses = [...new Set(newEnabledCustomStatuses)];\n\n        setEnabledCustomStatuses(newEnabledCustomStatuses);\n    };\n\n    const handleSelectAll = (event) => {\n        event.preventDefault();\n\n        setEnabledCustomStatuses(customPostStatuses.map((postStatus) => postStatus.value));\n    };\n\n    const handleUnselectAll = (event) => {\n        event.preventDefault();\n\n        setEnabledCustomStatuses([]);\n    };\n\n    if (settingActive) {\n        if (customPostStatuses.length === 0) {\n            return settingsRows;\n        }\n\n        const postStatusesCheckboxes = customPostStatuses.map((postStatus) => {\n            const checked = enabledCustomStatuses.includes(postStatus.value);\n            const fieldId = 'expirationdate_custom-statuses-' + props.postType + '-' + postStatus.value;\n\n            return (\n                <CheckboxControl\n                    key={fieldId}\n                    name={'expirationdate_custom-statuses-' + props.postType + '[]'}\n                    id={fieldId}\n                    value={postStatus.value}\n                    label={postStatus.label}\n                    checked={checked || false}\n                    onChange={(checked) => handleCustomStatusesChange(postStatus.value, checked)}\n                    title={postStatus.value}\n                />\n            );\n        });\n\n        settingsRows.push(\n            <SettingRow label={text.enableCustomStatuses} key={'custom-statuses'}>\n                <div>\n                    <label>{text.enableCustomStatusesDesc}</label>\n                </div>\n                <div className={'future_pro_checkbox_selection_control'}>\n                    <Button variant=\"link\" onClick={handleSelectAll}>{text.selectAll}</Button> | <Button variant=\"link\" onClick={handleUnselectAll}>{text.unselectAll}</Button>\n                </div>\n\n                {postStatusesCheckboxes}\n            </SettingRow>\n        );\n    }\n\n    return settingsRows;\n};\n\naddFilter('expirationdate_settings_posttype', 'publishpress/publishpress-future-pro', addSettings);\n"],"names":["ButtonsPanel","props","children","CheckboxControl","checked","setChecked","description","unescapedDescription","__html","onChange","value","label","name","className","DateTimePicker","currentDate","is12Hour","startOfWeek","wp","components","PanelRow","SelectControl","FormTokenField","Spinner","BaseControl","element","Fragment","useEffect","decodeEntities","htmlEntities","addQueryArgs","url","data","useSelect","useDispatch","apiFetch","FutureActionPanel","action","select","storeName","getAction","date","getDate","enabled","getEnabled","terms","getTerms","taxonomy","getTaxonomy","taxonomyName","getTaxonomyName","termsListByName","getTermsListByName","termsListById","getTermsListById","isFetchingTerms","getIsFetchingTerms","calendarIsVisible","getCalendarIsVisible","setAction","setDate","setEnabled","setTerms","setTaxonomy","setTermsListByName","setTermsListById","setTaxonomyName","setIsFetchingTerms","setCalendarIsVisible","mapTermsListById","map","term","insertTerm","id","count","link","slug","mapTermsListByName","callOnChangeData","attribute","onChangeData","handleEnabledChange","isChecked","fetchTerms","handleActionChange","handleDateChange","handleTermsChange","path","then","result","forEach","storeCalendarIsVisibleOnStorage","localStorage","setItem","context","getCalendarIsVisibleFromStorage","getItem","autoEnableAndHideCheckbox","isCleanNewPost","selectedTerms","length","termsListByNameKeys","Object","keys","panelClass","contentPanelClass","datePanelClass","is24hour","timeFormat","replaceCurlyBracketsWithLink","string","href","target","parts","split","push","shift","part","before","after","actionsSelectOptions","filter","item","indexOf","HelpText","strings","timezoneSettingsHelp","displayTaxonomyField","String","includes","enablePostExpiration","loading","noTaxonomyFound","noTermsFound","FutureActionPanelBlockEditor","PluginDocumentSettingPanel","editPost","editPostAttribute","newAttribute","publishpress_future_action","entries","store","getEditedPostAttribute","panelTitle","postTypeDefaultConfig","autoEnable","postType","FutureActionPanelBulkEdit","join","changeAction","getChangeAction","setChangeAction","termsString","handleStrategyChange","options","noChange","changeAdd","addOnly","changeOnly","removeOnly","optionsToDisplayPanel","futureActionUpdate","isNewPost","nonce","FutureActionPanelClassicEditor","browserTimezoneOffset","Date","getTimezoneOffset","getElementByName","document","getElementsByName","getTermsFromElementByName","parseInt","getElementValueByName","FutureActionPanelQuickEdit","NonceControl","referrer","PostTypeSettingsPanel","settings","postTypeTaxonomy","setPostTypeTaxonomy","termOptions","setTermOptions","termsSelectIsLoading","setTermsSelectIsLoading","setSelectedTerms","howToExpire","settingHowToExpire","setSettingHowToExpire","active","isActive","setIsActive","defaultExpireOffset","expireOffset","setExpireOffset","emailNotification","setEmailNotification","autoEnabled","isAutoEnabled","setIsAutoEnabled","onChangeTaxonomy","onChangeTerms","onChangeHowToExpire","onChangeActive","onChangeExpireOffset","onChangeEmailNotification","onChangeAutoEnabled","taxonomiesList","settingsTermsOptions","option","termOptionsLabels","settingsRows","text","fieldActive","fieldActiveLabel","fieldAutoEnable","fieldAutoEnableLabel","fieldTaxonomy","noItemsfound","fieldTaxonomyDescription","expireTypeList","fieldHowToExpire","fieldHowToExpireDescription","fieldTerm","fieldTermDescription","fieldDefaultDateTimeOffset","globalDefaultExpireOffset","fieldDefaultDateTimeOffsetDescription","fieldWhoToNotify","fieldWhoToNotifyDescription","useState","legend","PostTypesSettingsPanels","panels","postTypeSettings","noItemFoundMessage","selected","SettingRow","SettingsFieldset","SettingsForm","SettingsSection","title","SettingsTable","bodyChildren","SubmitButton","TextControl","placeholder","ToggleArrowButton","onClick","iconExpanded","iconCollapsed","icon","isExpanded","titleExpanded","titleCollapsed","ToggleCalendarDatePicker","onToggleCalendar","onChangeDate","toggleButtonElement","querySelector","dateTimeElement","nextElementSibling","timeElement","dateElement","nextSibling","insertBefore","hideCalendar","showCalendar","TokensControl","stringValue","setStringValue","maxSuggestions","expandOnFocus","autoSelectFirstMatch","TrueFalseControl","e","trueValue","jQuery","is","trueLabel","falseValue","falseLabel","getCurrentTimeInSeconds","normalizeUnixTimeToSeconds","getTime","getCurrentTimeAsTimestamp","formatUnixTimeToTimestamp","unixTimestamp","year","getFullYear","month","getMonth","slice","day","hours","getHours","minutes","getMinutes","seconds","getSeconds","formatTimestampToUnixTime","time","timeIsInSeconds","toString","normalizeUnixTimeToMilliseconds","compact","array","Array","isArray","values","undefined","debugLogFactory","config","message","console","isDebugEnabled","debug","isGutenbergEnabled","body","classList","contains","getFieldByName","postId","getFieldValueByName","field","getFieldValueByNameAsArrayOfInt","getFieldValueByNameAsBool","getActionSettingsFromColumnData","columnData","dataset","actionEnabled","actionType","actionDate","dateUnix","actionDateUnix","actionTaxonomy","actionTerms","isNumber","isNaN","addSettings","settingActive","defaultEnabledCustomStatuses","enabledCustomStatuses","setEnabledCustomStatuses","handleCustomStatusesChange","postStatus","newEnabledCustomStatuses","status","Set","handleSelectAll","event","preventDefault","customPostStatuses","handleUnselectAll","postStatusesCheckboxes","fieldId","enableCustomStatuses","enableCustomStatusesDesc","selectAll","unselectAll"],"sourceRoot":""}